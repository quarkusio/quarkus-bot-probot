module.exports = checkPullRequestEditorialRules

async function checkPullRequestEditorialRules (context) {
  const { title, head } = context.payload.pull_request

  let errorMessages = []
  if (title.endsWith('.')) {
    errorMessages.push("title should not end up with dot")
  }
  if (title.endsWith('â€¦')) {
    errorMessages.push("title should not end up with ellipsis (make sure the title is complete)")
  }
  if (title.trim().split(/\s+/).length < 2) {
    errorMessages.push("title should count at least 2 words to describe the change properly")
  }
  if (title.length > 0 && title.charAt(0).toUpperCase() != title.charAt(0)) {
    errorMessages.push("title should preferably start with an uppercase character (if it makes sense!)")
  }
  const issueRegexp = /#[0-9]+/
  if (title.match(issueRegexp)) {
    errorMessages.push("title should not contain an issue number (use 'Fix #1234' in the description instead)")
  }
  const fixFeatChoreRegexp = /^(fix|chore|feat|docs)[(:]/
  if (title.match(fixFeatChoreRegexp)) {
    errorMessages.push("title should not start with chore/feat/fix/docs but be a proper sentence")
  }

  if (errorMessages.length == 0) {
    return
  }

  let commentBody = "Thanks for your pull request!\n\nThe title of your pull request does not follow our editorial rules. Could you have a look?\n\n"
  errorMessages.forEach(errorMessage => commentBody += "* " + errorMessage + "\n")
  commentBody += "\n> This message is automatically generated by a bot."

  const issueComment = context.issue({ body: commentBody })
  return context.github.issues.createComment(issueComment)
}